#!/dev/null




<< go / execute / server / debug
	"${X_RUN[@]}" ':: go / build / server / debug'
	export -- GOMAXPROCS=2
	exec -- ./.outputs/binaries/debug/cdb-http-server "${@}"
	exit -- 1
!!

<< go / execute / server / release
	"${X_RUN[@]}" ':: go / build / server / release'
	export -- GOMAXPROCS=2
	exec -- ./.outputs/binaries/release/cdb-http-server "${@}"
	exit -- 1
!!


<< go / build / server / debug
	test "${#}" -eq 0
	mkdir -p -- ./.outputs/binaries/debug
	exec -- "${X_RUN[@]}" ':: go / tool' build \
			-v \
			-o ./.outputs/binaries/debug/cdb-http-server \
			-- ./sources/cmd/server.go \
		#
	exit -- 1
!!

<< go / build / server / release
	test "${#}" -eq 0
	mkdir -p -- ./.outputs/binaries/release
	exec -- "${X_RUN[@]}" ':: go / tool' build \
			-v \
			-ldflags '-s' \
			-o ./.outputs/binaries/release/cdb-http-server \
			-- ./sources/cmd/server.go \
		#
	exit -- 1
!!

<< go / build / server / release / analyze
	test "${#}" -eq 0
	mkdir -p -- ./.outputs/binaries/debug
	rm -f -- ./.outputs/binaries/debug/cdb-http-server
	exec -- "${X_RUN[@]}" ':: go / tool' build \
			-v \
			-ldflags '-s' \
			-gcflags '-m' \
			-o ./.outputs/binaries/debug/cdb-http-server \
			-- ./sources/cmd/server.go \
		#
	exit -- 1
!!


<< go / build / server / release / publish
	test "${#}" -eq 0
	printf -- '[ii]  building...\n' >&2
	"${X_RUN[@]}" ':: go / build / server / release'
	if test ! -e ./.outputs/publish ; then
		mkdir -- ./.outputs/publish
	fi
	if test ! -e ./.outputs/publish/bin ; then
		mkdir -- ./.outputs/publish/bin
	fi
	cp -T -- \
		./.outputs/binaries/release/cdb-http-server \
		./.outputs/publish/binaries/cdb-http-server \
	#
	exit -- 0
!!




<< go / execute / archiver / debug
	"${X_RUN[@]}" ':: go / build / archiver / debug'
	exec -- ./.outputs/binaries/debug/cdb-http-archiver "${@}"
	exit -- 1
!!

<< go / execute / archiver / release
	"${X_RUN[@]}" ':: go / build / archiver / release'
	exec -- ./.outputs/binaries/release/cdb-http-archiver "${@}"
	exit -- 1
!!


<< go / build / archiver / debug
	test "${#}" -eq 0
	mkdir -p -- ./.outputs/binaries/debug
	exec -- "${X_RUN[@]}" ':: go / tool' build \
			-v \
			-o ./.outputs/binaries/debug/cdb-http-archiver \
			-- ./sources/cmd/archiver.go \
		#
	exit -- 1
!!

<< go / build / archiver / release
	test "${#}" -eq 0
	mkdir -p -- ./.outputs/binaries/release
	exec -- "${X_RUN[@]}" ':: go / tool' build \
			-v \
			-ldflags '-s' \
			-o ./.outputs/binaries/release/cdb-http-archiver \
			-- ./sources/cmd/archiver.go \
		#
	exit -- 1
!!


<< go / build / archiver / release / publish
	test "${#}" -eq 0
	printf -- '[ii]  building...\n' >&2
	"${X_RUN[@]}" ':: go / build / archiver / release'
	if test ! -e ./.outputs/publish ; then
		mkdir -- ./.outputs/publish
	fi
	if test ! -e ./.outputs/publish/bin ; then
		mkdir -- ./.outputs/publish/bin
	fi
	cp -T -- \
		./.outputs/binaries/release/cdb-http-archiver \
		./.outputs/publish/binaries/cdb-http-archiver \
	#
	exit -- 0
!!




<< go / build / debug
	"${X_RUN}" ':: go / build / archiver / debug' "${@}"
	"${X_RUN}" ':: go / build / server / debug' "${@}"
	exit -- 0
!!

<< go / build / release
	"${X_RUN}" ':: go / build / archiver / release' "${@}"
	"${X_RUN}" ':: go / build / server / release' "${@}"
	exit -- 0
!!




<< publish
	test "${#}" -eq 0
	printf -- '[ii]  publishing to `https://data.volution.ro/ciprian/ad5264afc6e27e46b5d71837552cb3fd`...\n' >&2
	exec -- rsync -a -v -- ./.outputs/publish/ ./.publish/
	exit -- 1
!!




<< go / dependencies / update
	test "${#}" -eq 0
	_packages=(
			github.com/valyala/fasthttp
			github.com/google/brotli/go/cbrotli
		)
	for _package in "${_packages[@]}" ; do
		"${X_RUN[@]}" ':: go / tool' get -v -p 1 -d -- "${_package}"
	done
	exit -- 0
!!

<< go / dependencies / clean
	test "${#}" -eq 0
	if test -e ./.outputs/go ; then
		exec -- rm -R -f -- \
				./.outputs/go \
			#
		exit -- 1
	else
		exit -- 0
	fi
!!


<< go / tool
	
	test "${#}" -ge 1
	
	test -d ./.outputs
	_sources="$( exec -- readlink -e -- ./sources )"
	_vendor="$( exec -- readlink -e -- ./vendor )"
	_outputs="$( exec -- readlink -e -- ./.outputs )"
	
	export -- GOPATH="${_outputs}/go"
	export -- GOBIN="${_outputs}/go/bin"
	export -- GOTMPDIR="${_outputs}/go/tmp"
	export -- GOCACHE="${_outputs}/go/cache"
	
	for _folder in "${GOPATH}" "${GOBIN}" "${GOTMPDIR}" "${GOTMPDIR}" "${GOCACHE}" ; do
		if test ! -e "${_folder}" ; then
			mkdir -- "${_folder}"
		fi
	done
	
	if test ! -e "${GOPATH}/src" ; then
		ln -s -T -- "${_vendor}" "${GOPATH}/src"
	fi
	
	exec -- go "${@}"
	
	exit -- 1
!!




<< workspace / initialize / outputs
	
	test "${#}" -eq 0
	
	if test -d ./.outputs ; then
		exit -- 0
	fi
	
	_outputs_store="${TMPDIR:-/tmp}/go--${UID}--${RANDOM}-${RANDOM}-${RANDOM}-${RANDOM}"
	
	mkdir -- "${_outputs_store}"
	
	_outputs_store="$( exec -- readlink -e -- "${_outputs_store}" )"
	
	ln -s -f -T -- "${_outputs_store}" ./.outputs
	
	exit -- 0
!!


<< workspace / initialize / python
	
	test "${#}" -eq 0
	
	if test -d ./.python ; then
		exit -- 0
	fi
	
	test -d ./.outputs
	mkdir -- ./.outputs/python
	
	virtualenv-2.7 \
			--python python2.7 \
			--clear \
			--no-site-packages \
			--no-setuptools \
			--no-wheel \
			--no-download \
			--unzip-setuptools \
			-- \
			./.outputs/python \
		#
	
	./.outputs/python/bin/pip install --upgrade --compile -- pip
	./.outputs/python/bin/pip install --upgrade --compile -- wheel
	./.outputs/python/bin/pip install --upgrade --compile -- setuptools
	
	./.outputs/python/bin/pip install --compile -- docutils
	./.outputs/python/bin/pip install --compile -- restview
	
	ln -s -f -T -- ./.outputs/python ./.python
	
	exit -- 0
!!


<< workspace / initialize / databases
	
	test "${#}" -eq 0
	
	if test -d ./.databases ; then
		exit -- 0
	fi
	
	test -d ./.outputs
	mkdir -- ./.outputs/databases
	
	ln -s -f -T -- ./.outputs/databases ./.databases
	
	exit -- 0
!!




<< sources / grep / codes
	test "${#}" -eq 0
	grep -o -P -e '(?<=\[)[0-9a-f]{8}(?=\])' -h -r . --include '*.go' | sort | uniq -d
	exit -- 0
!!


<< documentation / readme / open
	test "${#}" -eq 0
	exec -- x-www open http://127.33.237.174:8080/
	exit -- 1
!!

<< documentation / readme / server
	test "${#}" -eq 0
	exec -- ./.python/bin/restview --no-browser --listen 127.33.237.174:8080 --allowed-hosts '*' -- ./readme.rst
	exit -- 1
!!




<< examples / fontawesome / serve
	exec -- "${X_RUN[@]}" ':: go / execute / server / release' \
			--archive ./.databases/fontawesome.cdb \
			--bind 127.198.53.69:8080 \
			--preload \
			--debug \
			"${@}" \
		#
	exit -- 1
!!




<< examples / python-2.7.15-docs-html / archive / all
	"${X_RUN[@]}" ':: examples / python-2.7.15-docs-html / archive / identity'
	"${X_RUN[@]}" ':: examples / python-2.7.15-docs-html / archive / gzip'
	"${X_RUN[@]}" ':: examples / python-2.7.15-docs-html / archive / brotli'
	exit -- 0
!!

<< examples / python-2.7.15-docs-html / archive / identity
	exec -- "${X_RUN[@]}" ':: go / execute / archiver / release' \
			--sources ./.databases/python-2.7.15-docs-html \
			--archive ./.databases/python-2.7.15-docs-html.cdb \
			--debug \
			"${@}" \
		#
	exit -- 1
!!

<< examples / python-2.7.15-docs-html / archive / gzip
	exec -- "${X_RUN[@]}" ':: go / execute / archiver / release' \
			--sources ./.databases/python-2.7.15-docs-html \
			--archive ./.databases/python-2.7.15-docs-html-gzip.cdb \
			--compress gzip \
			--debug \
			"${@}" \
		#
	exit -- 1
!!

<< examples / python-2.7.15-docs-html / archive / brotli
	exec -- "${X_RUN[@]}" ':: go / execute / archiver / release' \
			--sources ./.databases/python-2.7.15-docs-html \
			--archive ./.databases/python-2.7.15-docs-html-brotli.cdb \
			--compress brotli \
			--debug \
			"${@}" \
		#
	exit -- 1
!!


<< examples / python-2.7.15-docs-html / serve / identity
	exec -- "${X_RUN[@]}" ':: go / execute / server / release' \
			--archive ./.databases/python-2.7.15-docs-html.cdb \
			--bind 127.198.53.69:8080 \
			--preload \
			--debug \
			"${@}" \
		#
	exit -- 1
!!

<< examples / python-2.7.15-docs-html / serve / gzip
	exec -- "${X_RUN[@]}" ':: go / execute / server / release' \
			--archive ./.databases/python-2.7.15-docs-html-gzip.cdb \
			--bind 127.198.53.69:8080 \
			--preload \
			--debug \
			"${@}" \
		#
	exit -- 1
!!

<< examples / python-2.7.15-docs-html / serve / brotli
	exec -- "${X_RUN[@]}" ':: go / execute / server / release' \
			--archive ./.databases/python-2.7.15-docs-html-brotli.cdb \
			--bind 127.198.53.69:8080 \
			--preload \
			--debug \
			"${@}" \
		#
	exit -- 1
!!




<< examples / jdk-11.0.1-docs-html / archive / all
	"${X_RUN[@]}" ':: examples / jdk-11.0.1-docs-html / archive / gzip'
	"${X_RUN[@]}" ':: examples / jdk-11.0.1-docs-html / archive / brotli'
	exit -- 0
!!

<< examples / jdk-11.0.1-docs-html / archive / gzip
	exec -- "${X_RUN[@]}" ':: go / execute / archiver / release' \
			--sources ./.databases/jdk-11.0.1-docs-html \
			--archive ./.databases/jdk-11.0.1-docs-html-gzip.cdb \
			--compress gzip \
			--debug \
			"${@}" \
		#
	exit -- 1
!!

<< examples / jdk-11.0.1-docs-html / archive / brotli
	exec -- "${X_RUN[@]}" ':: go / execute / archiver / release' \
			--sources ./.databases/jdk-11.0.1-docs-html \
			--archive ./.databases/jdk-11.0.1-docs-html-brotli.cdb \
			--compress brotli \
			--debug \
			"${@}" \
		#
	exit -- 1
!!


<< examples / jdk-11.0.1-docs-html / serve / gzip
	exec -- "${X_RUN[@]}" ':: go / execute / server / release' \
			--archive ./.databases/jdk-11.0.1-docs-html-gzip.cdb \
			--bind 127.198.53.69:8080 \
			--preload \
			--debug \
			"${@}" \
		#
	exit -- 1
!!

<< examples / jdk-11.0.1-docs-html / serve / brotli
	exec -- "${X_RUN[@]}" ':: go / execute / server / release' \
			--archive ./.databases/jdk-11.0.1-docs-html-brotli.cdb \
			--bind 127.198.53.69:8080 \
			--preload \
			--debug \
			"${@}" \
		#
	exit -- 1
!!




<< benchmark / server
	"${X_RUN[@]}" ':: go / build / server / release'
	exec -- \
	sudo -u root -n -E -P -- \
	taskset -c 1,2,3 \
	nice -n -19 -- \
	ionice -c 2 -n 0 -- \
	chrt -r 10 \
	softlimit -o 16384 \
	sudo -u "${USER}" -n -E -P -- \
	env -i \
			GOMAXPROCS=4 \
	./.outputs/binaries/release/cdb-http-server \
			--archive ./examples/hello-world.cdb \
			--bind 127.9.185.194:8080 \
			--preload \
			"${@}" \
		#
	exit -- 1
!!

<< benchmark / server / profile / cpu
	exec -- "${X_RUN[@]}" ':: benchmark / server' \
			--profile-cpu ./.outputs/server-cpu.txt \
			"${@}" \
		#
	exit -- 1
!!

<< benchmark / server / profile / mem
	exec -- "${X_RUN[@]}" ':: benchmark / server' \
			--profile-mem ./.outputs/server-mem.txt \
			"${@}" \
		#
	exit -- 1
!!

<< benchmark / server / profile / cpu / analyze
	exec -- go tool pprof "${@}" -- ./.outputs/server-cpu.txt
	exit -- 1
!!

<< benchmark / server / profile / mem / analyze
	exec -- go tool pprof "${@}" ./.outputs/server-mem.txt
	exit -- 1
!!


<< benchmark / client
	exec -- \
	sudo -u root -n -E -P -- \
	taskset -c 1,2,3 \
	nice -n -19 -- \
	ionice -c 2 -n 0 -- \
	chrt -r 10 \
	softlimit -o 16384 \
	sudo -u "${USER}" -n -E -P -- \
	env -i \
	"$( type -P -- wrk )" \
			--timeout 1s \
			--duration 6s \
			--latency \
			"${@}" \
			-- http://127.9.185.194:8080/ \
		#
	exit -- 1
!!

<< benchmark / client / 2048
	exec -- "${X_RUN[@]}" ':: benchmark / client' \
			--threads 4 \
			--connections 2048 \
			"${@}" \
		#
	exit -- 1
!!

<< benchmark / client / 512
	exec -- "${X_RUN[@]}" ':: benchmark / client' \
			--threads 4 \
			--connections 512 \
			"${@}" \
		#
	exit -- 1
!!

<< benchmark / client / 16
	exec -- "${X_RUN[@]}" ':: benchmark / client' \
			--threads 4 \
			--connections 16 \
			"${@}" \
		#
	exit -- 1
!!

